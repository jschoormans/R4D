% 3D Gridding of AAA data experiments...

%%%%%%%%%%%%%%%%%%%%% add relevant folders
init_paths
%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%% Load file locations
clear
cd('/scratch/jschoormans/R4D/General_Code/Studies/AAA')
load('filelocations.mat') %filenames an dpaths of AAA DCE scans --> of note. A few sessions seem to have two DCE scans - ask what's up with that
%%%%%%%%%%%%%%%%%%%%


%%
%%%%%%%%%%%%%%%%%%%%
P=struct();
P.folder=F{5,1}.path;
P.file=F{5,1}.name;
P.DCEparams=struct();
P.DCEparams.nspokes=12;
P.channelcompression=false;
P.cc_nrofchans=5
P.spokestoread=[0:300].'

P=checkGAParams(P);
MR=GoldenAngle_Recon([F{5,1}.path,filesep,F{5,1}.name]); %initialize MR object

[MR,P] = UpdateReadParamsMR(MR,P);  %update read paramters based on MR object params
%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%
MR.Perform1;                        %reading and sorting data
MR.CalculateAngles;
MR.PhaseShift;
MR.Data=ifft(MR.Data,[],3);         %eventually: remove slice oversampling
fprintf('\nloading data...');toc
%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%
tic 
[nx,ntviews,ny,nc]=size(MR.Data);
k=buildRadTraj2D(nx,ntviews,false,true,true,[],[],[],[],P.goldenangle);
fprintf('building trajectory...');toc
%%%%%%%%%%%%%%%%%%%%




%%%%%%%%%%%%%%%%%%%%
tic
res=MR.Parameter.Encoding.XReconRes;
kdata=squeeze(MR.Data); %select kdata for slice
w=getRadWeightsGA(k);
weighted_data=bsxfun(@times,kdata,sqrt(w));
NUFFTOP=NUFFT(k,sqrt(w),1,0,[res res],2);
fprintf('calculating separate coil/slice images for openadapt...\n')
tic
for selectslice=P.reconslices       % sort the data into a time-series
    fprintf('%d - ',selectslice)
    for selectcoil=[1:size(kdata,4)]
        zerofill(:,:,selectslice,selectcoil)=NUFFTOP'*double(weighted_data(:,:,selectslice,selectcoil));
    end
end
toc
zerofill=permute(zerofill,[4 1 2 3]); 
%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%
tic; [~, ~, sens] = openadapt(zerofill,1); % not sure about psi though
sens=permute(sens,[2 3 4 1]);       fprintf('\nopenadapt sense maps...');toc
img_sens_sos = sqrt(sum(abs(sens).^2,4));
sens = sens./repmat(img_sens_sos,[1,1,1,nc]);
%%%%%%%%%%%%%%%%%%%%

%%

imagine(sens)
imagine(permute(zerofill,[2 3 4 1]))




%%




%% sorting into timeframes; Remove oversampling in z-direction
tic
%%%SORTING
kdata=squeeze(MR.Data(:,:,:,:,1)); %select kdata for slice
nt=floor(ntviews/P.DCEparams.nspokes);              % calculate (max) number of frames
kdatac=kdata(:,1:nt*P.DCEparams.nspokes,:,:);       % crop the data according to the number of spokes per frame

for ii=1:nt       % sort the data into a time-series
    kdatau(:,:,:,:,ii)=kdatac(:,(ii-1)*P.DCEparams.nspokes+1:ii*P.DCEparams.nspokes,:,:); %kdatau now (nfe nspoke nslice nc nt)
    ku(:,:,ii)=double(k(:,(ii-1)*P.DCEparams.nspokes+1:ii*P.DCEparams.nspokes));
end

wu=getRadWeightsGA(ku);
clear kdatac kdata %clear memory
toc

zres=max(unique(MR.Parameter.Encoding.ZRes));    % 2017-01-23 pdh added
slices_to_keep=[1+((ny-zres)/2):zres+((ny-zres)/2)];
slices_to_keep=floor(slices_to_keep);
kdatau=kdatau(:,:,slices_to_keep,:,:);

fprintf('\nsorting into timeframes...');toc
%% get first guess

tic
disp('First guess')
for selectslice=P.reconslices       % sort the data into a time-series
    fprintf('%d - ',selectslice)
    tempy=squeeze(double(kdatau(:,:,selectslice,:,:))).*permute(repmat(sqrt(wu(:,:,:)),[1 1 1 nc]),[1 2 4 3]);
    
    NUFFTOP=GPUNUFFTT(ku(:,:,:),(wu(:,:,:)),squeeze(sens(:,:,selectslice,:)));
    R(:,:,selectslice,:)=(NUFFTOP'*tempy); %first guess
end
R(isnan(R))=0;
fprintf('\nFirst Guess...');toc


%% find resp signal...


gating_params=struct()
gating_params.cksp=352;
gating_params.gatingchans=[1,2,3,4,5];
gating_params.nspokes=size(MR.Data,2);
gating_params.visualize=1
gating_params.gatingnz=[18];
gating_params.goldenangle=[111.3]
gating_params.Fs=1/(MR.Parameter.Scan.TR*1e-3*MR.Parameter.Scan.Samples(3))
gating_params.PCAfreqband=[0.1 1]


[gating_signal2,W] = PCA_gating_signal(MR.Data,gating_params)


%% new method...

figure(100);
for ii=1:5
    subplot(5,1,ii);
    S(ii,:,:)=MR.Data(352,:,:,ii);
    imshow(squeeze(abs(S(ii,:,:))).',[]);
    coeff(ii,:,:)=pca(squeeze(S(ii,:,:)))

end

% PCA on these...

figure(101)
plot(squeeze(coeff(1,:,:))














